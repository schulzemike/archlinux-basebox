packer {
  required_plugins {
    virtualbox = {
      version = ">= 1.0.5"
      source  = "github.com/hashicorp/virtualbox"
    }
    sshkey = {
      version = ">= 1.0.9"
      source = "github.com/ivoronin/sshkey"
    }
  }
}
variable "download_mirror" {
  type    = string
  default = "ftp.halifax.rwth-aachen.de"
}

variable "arch_version" {
  type    = string
  default = "2023.07.01"
}

data "sshkey" "vagrant" {
  name = "vagrant_id"
}

source "virtualbox-iso" "autogenerated_1" {
  boot_command         = [
							"<enter><wait20>",
							"/usr/bin/curl -O http://{{ .HTTPIP }}:{{ .HTTPPort }}/user_configuration.json<enter><wait1>", 
							"/usr/bin/curl -O http://{{ .HTTPIP }}:{{ .HTTPPort }}/user_credentials.json<enter><wait1>", 
							"/usr/bin/curl -O http://{{ .HTTPIP }}:{{ .HTTPPort }}/user_disk_layout.json<enter><wait1>", 
							"archinstall --config user_configuration.json --creds user_credentials.json --disk_layout user_disk_layout.json<enter><wait30><wait5>",
							"<up><up><enter><wait5><enter><wait6m><wait30>",
							"<down><enter>",
							"reboot<enter><wait5>"

						]
  boot_wait            = "5s"
  cpus                 = 1
  disk_size            = 20480
  memory               = 768
  gfx_controller       = "vboxsvga"
  gfx_vram_size        = 128
  guest_os_type        = "ArchLinux_64"
  hard_drive_interface = "sata"
  headless             = "false"
  http_directory       = "srv"
  iso_checksum         = "file:https://${var.download_mirror}/archlinux/iso/${var.arch_version}/sha256sums.txt"
  iso_url              = "https://${var.download_mirror}/archlinux/iso/${var.arch_version}/archlinux-${var.arch_version}-x86_64.iso"
  shutdown_command     = "sudo shutdown -P now"
  disable_shutdown     = false
  ssh_username         = "vagrant"
  ssh_password         = "vagrant"
  ssh_timeout          = "10m"
  vboxmanage           = [["modifyvm", "{{ .Name }}", "--nat-localhostreachable1", "on"]]
}

build {
  sources = ["source.virtualbox-iso.autogenerated_1"]
 
  provisioner "shell" {
	inline = [
	    "echo 'Saving public SSH key for vagrant user...'",
	    "mkdir /home/vagrant/.ssh",
		"echo ${data.sshkey.vagrant.public_key} > /home/vagrant/.ssh/authorized_keys"
	]
  }
  
  provisioner "shell" {
	inline = [
	    "echo 'Installing VirtualBox Guest Additions...'",
	    "sudo mkdir /mnt/cdrom",
		"sudo mount /home/vagrant/VBoxGuestAdditions.iso /mnt/cdrom",
		"sudo /mnt/cdrom/VBoxLinuxAdditions.run || sudo rcvboxadd reload",
		"echo 'Finished installing VirtualBox Guest Additions.'"
	]
  }

  post-processor "vagrant" {
	output = "output/my-arch-base.box"
  }
}
